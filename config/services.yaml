parameters:
    env(PROXY_OFFICIAL_ENDPOINT): 'true'
    proxy_official_endpoint: '%env(bool:PROXY_OFFICIAL_ENDPOINT)%'
    env(CACHE_OFFICIAL_ENDPOINT): 'true'
    cache_official_endpoint: '%env(bool:CACHE_OFFICIAL_ENDPOINT)%'
    env(MIRROR_OFFICIAL_ENDPOINT): 'true'
    mirror_official_recipes: '%env(bool:MIRROR_OFFICIAL_ENDPOINT)%'
    env(MIRROR_CONTRIB_RECIPES): 'false'
    mirror_contrib_recipes: '%env(bool:MIRROR_CONTRIB_RECIPES)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.
        bind:
            $officialEndpoint: '%env(FLEX_OFFICIAL_ENDPOINT)%'
            $enableProxy: '%proxy_official_endpoint%'
            $cacheEndpoint: '%cache_official_endpoint%'
            $privateRepoUrl: '%env(FLEX_RECIPE_REPO_PRIVATE)%'
            $officialRepoUrl: '%env(FLEX_RECIPE_REPO_OFFICIAL)%'
            $contribRepoUrl: '%env(FLEX_RECIPE_REPO_CONTRIB)%'
            $mirrorOfficialRepo: '%mirror_official_recipes%'
            $mirrorContribRepo: '%mirror_contrib_recipes%'
            $projectDir: '%kernel.project_dir%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
